language: cpp

# see https://github.com/nlohmann/json/blob/develop/.travis.yml
matrix:
  # standard g++-8 build
  include:
  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CMAKE_OPTIONS=-DRH_sanitizer=ON
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8']

  # 32bit build
  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CMAKE_OPTIONS=-DRH_sanitizer=ON
    - CXXFLAGS="-m32"
    - LDFLAGS="-m32"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8-multilib', 'linux-libc-dev:i386']

  # build for c++17
  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CXXFLAGS="-O2 -std=c++17"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8']

  # -fsanitize=address with additional checks
  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CMAKE_OPTIONS=-DRH_sanitizer=ON
    - ASAN_OPTIONS=verbosity=1:detect_invalid_pointer_pairs=2
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8']

  # clang should work too
  - os: linux
    compiler: clang
    env:
    - COMPILER=clang++-6.0
    - CMAKE_OPTIONS=-DRH_sanitizer=ON
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0']
        packages: ['g++-6', 'clang-6.0',]

  # tests for c++11
  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-8
    - CMAKE_OPTIONS="-DRH_sanitizer=ON -DRH_use_cxx11=ON"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8']

  - os: linux
    compiler: clang
    env:
    - COMPILER=clang++-6.0
    - CMAKE_OPTIONS="-DRH_sanitizer=ON -DRH_use_cxx11=ON"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0']
        packages: ['g++-6', 'clang-6.0',]

script:
  # make sure CXX is correctly set
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  # show OS/compiler version
  - uname -a
  - $CXX --version

  # build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release ${CMAKE_OPTIONS} && cmake --build . -- -j4

  # check file
  - file ./rh

  # run test
  - ./rh -ns -ts=show
  - ./rh -ns -ts=count
  - ./rh
